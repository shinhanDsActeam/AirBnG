<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.airbng.mappers.ReservationMapper">
    <insert id="insertReservation" parameterType="com.airbng.dto.reservation.ReservationInsertRequest">
        INSERT INTO Reservation(
            dropper_id, keeper_id, start_time, end_time, state
        )VALUES(
            #{dropperId}, #{keeperId}, #{startTime}, #{endTime}, 'PENDING'
        )
        <selectKey keyProperty="id" resultType="Long" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <resultMap id="ReservationWithDropperAndKeeperMap" type="com.airbng.domain.Reservation">
        <result property="reservationId" column="reservation_id"/>
        <result property="state" column="state"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>

        <association property="dropper" javaType="com.airbng.domain.Member">
            <result property="memberId" column="dropper_id"/>
            <result property="email" column="dropper_email"/>
            <result property="name" column="dropper_name"/>
            <result property="phone" column="dropper_phone"/>
            <result property="nickname" column="dropper_nickname"/>
            <result property="password" column="dropper_password"/>
            <result property="status" column="dropper_status"/>
        </association>

        <association property="keeper" javaType="com.airbng.domain.Member">
            <result property="memberId" column="keeper_id"/>
            <result property="email" column="keeper_email"/>
            <result property="name" column="keeper_name"/>
            <result property="phone" column="keeper_phone"/>
            <result property="nickname" column="keeper_nickname"/>
            <result property="password" column="keeper_password"/>
            <result property="status" column="keeper_status"/>
        </association>

        <collection property="reservationJimTypes" ofType="com.airbng.domain.jimtype.ReservationJimType">
            <result property="jimType.jimTypeId" column="jimtype_id"/>
            <result property="jimType.typeName" column="type_name"/>
            <result property="count" column="count"/>
        </collection>
    </resultMap>

    <select id="findReservationDetailById" parameterType="Long" resultMap="ReservationWithDropperAndKeeperMap">
        SELECT
            r.reservation_id,
            r.state,
            r.start_time,
            r.end_time,

            d.member_id AS dropper_id,
            d.email AS dropper_email,
            d.name AS dropper_name,
            d.phone AS dropper_phone,
            d.nickname AS dropper_nickname,
            d.password AS dropper_password,
            d.status AS dropper_status,

            k.member_id AS keeper_id,
            k.email AS keeper_email,
            k.name AS keeper_name,
            k.phone AS keeper_phone,
            k.nickname AS keeper_nickname,
            k.password AS keeper_password,
            k.status AS keeper_status,

            rjt.jimtype_id AS jimtype_id,
            jt.type_name AS type_name,
            rjt.count AS count

        FROM reservation r
        JOIN member d ON r.dropper_id = d.member_id
        JOIN member k ON r.keeper_id = k.member_id
        LEFT JOIN reservationJimtype rjt ON r.reservation_id = rjt.reservation_id
        LEFT JOIN jimtype jt ON rjt.jimtype_id = jt.jimtype_id

        WHERE r.reservation_id = #{reservationId}
    </select>

  
    <!-- 예약 목록 조회 -->
    <resultMap id="ReservationSearch" type="com.airbng.dto.reservation.ReservationSearchResponse">
        <result property="reservationId" column="reservation_id" />
        <result property="state" column="state" />
        <result property="keeperId" column="keeper_id" />
        <result property="dropperId" column="dropper_id" />
    </resultMap>

    <select id="findAllReservationById" resultMap="ReservationSearch">
        SELECT
        r.reservation_id,
        r.state,
        r.keeper_id,
        r.dropper_id
        FROM Reservation r
        <!-- 동적 JOIN -->
        <choose>
            <when test="role == 'KEEPER'">
                LEFT JOIN Member m ON r.keeper_id = m.member_id
            </when>
            <when test="role == 'DROPPER'">
                LEFT JOIN Member m ON r.dropper_id = m.member_id
            </when>
        </choose>
        <where>
            <choose>
                <when test="role == 'KEEPER'">
                    r.keeper_id = #{memberId}
                </when>
                <when test="role == 'DROPPER'">
                    r.dropper_id = #{memberId}
                </when>
            </choose>
            <if test="state != null and state != ''">
                AND r.state = #{state}
            </if>
            <if test="nextCursorId != null">
                <!--최신 보관소 보여주기 위해서 내림차순 + nextCursorId보다 작은 id를 출력 (nextCursorId는 높은 숫자부터 내려가야함)-->
                AND r.reservation_id &lt; #{nextCursorId} <!-- &lt;는 부등호 '<'를 의미-->
            </if>
            <!-- COMPLETED or CANCELLED 상태일 때만 end_time 기준 필터 -->
            <if test="state != null and state != '' and period != null and (state.equals('COMPLETED') or state.equals('CANCELLED'))">
                <choose>
                    <when test="period.equals('1W')">
                        AND r.end_time &gt;= DATE_SUB(NOW(), INTERVAL 1 WEEK)
                    </when>
                    <when test="period.equals('3M')">
                        AND r.end_time &gt;= DATE_SUB(NOW(), INTERVAL 3 MONTH)
                    </when>
                    <when test="period.equals('6M')">
                        AND r.end_time &gt;= DATE_SUB(NOW(), INTERVAL 6 MONTH)
                    </when>
                    <when test="period.equals('1Y')">
                        AND r.end_time &gt;= DATE_SUB(NOW(), INTERVAL 1 YEAR)
                    </when>
                    <when test="period.equals('2Y')">
                        AND r.end_time &gt;= DATE_SUB(NOW(), INTERVAL 2 YEAR)
                    </when>
                    <when test="period.equals('ALL')">
                        <!-- 전체: 조건 없음 -->
                    </when>
                </choose>
            </if>
        </where>
        GROUP BY r.reservation_id ORDER BY r.reservation_id desc LIMIT #{limit}
    </select>

    <!-- 예약 건수 조회 -->
    <select id="findReservationByMemberId">
        SELECT COUNT(*)
        FROM Reservation r
        <if test="role == 'KEEPER'">
            LEFT JOIN Member m ON r.keeper_id = m.member_id
        </if>
        <if test="role == 'DROPPER'">
            LEFT JOIN Member m ON r.dropper_id = m.member_id
        </if>
        WHERE m.member_id = #{memberId}
    </select>

    <resultMap id="ReservationWithDropperMap" type="com.airbng.domain.Reservation">
        <result property="reservationId" column="reservation_id"/>
        <result property="state" column="state"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>

        <association property="dropper" javaType="com.airbng.domain.Member">
            <result property="memberId" column="dropper_id"/>
            <result property="email" column="dropper_email"/>
            <result property="name" column="dropper_name"/>
            <result property="phone" column="dropper_phone"/>
            <result property="nickname" column="dropper_nickname"/>
            <result property="password" column="dropper_password"/>
            <result property="status" column="dropper_status"/>
        </association>
    </resultMap>


    <select id="findReservationWithDropperById" parameterType="Long" resultMap="ReservationWithDropperMap">
        SELECT
            r.reservation_id,
            r.state,
            r.start_time,
            r.end_time,

            d.member_id AS dropper_id,
            d.email AS dropper_email,
            d.name AS dropper_name,
            d.phone AS dropper_phone,
            d.nickname AS dropper_nickname,
            d.password AS dropper_password,
            d.status AS dropper_status

        FROM reservation r
        JOIN member d ON r.dropper_id = d.member_id
        WHERE r.reservation_id = #{reservationId}
    </select>


    <update id="updateReservationState">
        UPDATE reservation
        SET state = #{state}
        WHERE reservation_id = #{reservationId}
    </update>

    <resultMap id="ReservationWithKeeperMap" type="com.airbng.domain.Reservation">
        <result property="reservationId" column="reservation_id"/>
        <result property="state" column="state"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>

        <association property="keeper" javaType="com.airbng.domain.Member">
            <result property="memberId" column="keeper_id"/>
            <result property="email" column="keeper_email"/>
            <result property="name" column="keeper_name"/>
            <result property="phone" column="keeper_phone"/>
            <result property="nickname" column="keeper_nickname"/>
            <result property="password" column="keeper_password"/>
            <result property="status" column="keeper_status"/>
        </association>
    </resultMap>

    <select id="findReservationWithKeeperById" parameterType="Long" resultMap="ReservationWithKeeperMap">
        SELECT
            r.reservation_id,
            r.state,
            r.start_time,
            r.end_time,

            k.member_id AS keeper_id,
            k.email AS keeper_email,
            k.name AS keeper_name,
            k.phone AS keeper_phone,
            k.nickname AS keeper_nickname,
            k.password AS keeper_password,
            k.status AS keeper_status

        FROM reservation r
                 JOIN member k ON r.keeper_id = k.member_id
        WHERE r.reservation_id = #{reservationId}
    </select>

    <select id="getLockerKepperId" parameterType="Long">
        SELECT member_id
        FROM locker
        WHERE locker_id = #{lockerId}
    </select>

</mapper>